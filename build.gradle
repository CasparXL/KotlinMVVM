apply from: "config.gradle"

buildscript {
    ext.kotlin_version = '1.6.10'

    repositories {
        mavenCentral()
        google()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        maven { url "https://jitpack.io" }
    }
    /*Partial dependency libraries introduce existing dependencies, which are handled in the following way in order to unify their versions*/
    /*部分依赖项库引入了现有的依赖项，为了统一它们的版本，可以按照以下方式处理它们*/
    configurations.all {
        resolutionStrategy.eachDependency { details ->
            def requested = details.requested
            if (requested.group == 'org.jetbrains.kotlin') {
                if (requested.name.startsWith("kotlin-stdlib")) {
                    details.useVersion '1.6.10'
                }
            }
        }
    }

    tasks.withType(JavaCompile) {
        // 设置全局编码
        options.encoding = 'UTF-8'
    }

    tasks.withType(Javadoc) {
        // 设置文档编码
        options {
            encoding 'UTF-8'
            charSet 'UTF-8'
            links 'http://docs.oracle.com/javase/7/docs/api'
        }
    }

    // 将构建文件统一输出到项目根目录下的 build 文件夹
    setBuildDir(new File(rootDir, "build/${path.replaceAll(':', '/')}"))
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
